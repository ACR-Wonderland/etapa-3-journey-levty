services:
  pg-db-etapa-3:
    container_name: pg-db-etapa-3
    image: postgres:17
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=${NODE_ENV}
    volumes:
      - etapa-3-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 5s
      timeout: 30s
      retries: 5
  
  migrations:
    build: .
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=${NODE_ENV}
    command: ["npm", "run", "db:setup:container"]
    depends_on:
      pg-db-etapa-3:
        condition: service_healthy
  
  server:
    container_name: etapa-3-server
    build: .
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      migrations:
        condition: service_completed_successfully
  
volumes:
  etapa-3-data: